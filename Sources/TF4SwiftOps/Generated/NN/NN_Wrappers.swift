// @generated by tf4swift-opgen â€” DO NOT EDIT.
// 2025-09-08 15:29:30 +0000
import TF4SwiftCore

public extension Ops.NN {
  // MARK: - Unary element-wise
  /// Unary operation.
  /// - Graph op: Elu
  @inlinable
  func elu<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("Elu", in: ctx, x)
  }

  /// Unary operation.
  /// - Graph op: L2Loss
  @inlinable
  func l2_loss<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("L2Loss", in: ctx, x)
  }

  /// Unary operation.
  /// - Graph op: LRN
  @inlinable
  func local_response_normalization<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("LRN", in: ctx, x)
  }

  /// Unary operation.
  /// - Graph op: Relu
  @inlinable
  func relu<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("Relu", in: ctx, x)
  }

  /// Unary operation.
  /// - Graph op: Selu
  @inlinable
  func selu<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("Selu", in: ctx, x)
  }

  /// Unary operation.
  /// - Graph op: Softsign
  @inlinable
  func softsign<T>(_ x: Tensor<T>) -> Tensor<T> {
    OpRunner.unary("Softsign", in: ctx, x)
  }

  // MARK: - Binary element-wise
  /// Binary element-wise operation.
  /// - Graph op: SoftmaxCrossEntropyWithLogits
  @inlinable
  func softmaxCrossEntropyWithLogits<T>(_ x: Tensor<T>, _ y: Tensor<T>) -> (Tensor<T>, Tensor<T>) {
    OpRunner.binary2("SoftmaxCrossEntropyWithLogits", in: ctx, x, y)
  }

}
